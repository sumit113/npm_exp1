name: Publish to npm

on:
  push:
    branches:
      - feature
    paths:
      - 'packages/is-even-by-cv/**'
      - 'packages/is-odd-by-cv/**'

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - packages/is-even-by-cv
          - packages/is-odd-by-cv
            
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: 'Automated Version Bump'  
        uses: 'qubetools/qubetools-gh-action-semantic-version-tag-bump@v1.0.0'
        id: version-bump  
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          PACKAGEJSON_DIR: ${{ matrix.package.path }}
        with:
          major-wording: 'major,Major,breaking,Breaking'   
          minor-wording: 'minor,Minor,new,New,feat,Feat,feature,Feature,release,Release'
          patch-wording: 'fix,Fix,fixes,Fixes,patch,Patch' 
          rc-wording: 'rc,pre'  
          hours-to-go-back: 24 
          skip-if-no-commits: 'true' 
          tag-prefix: 'v'   
          commit-message: 'CI: bumps version to {{version}} [skip ci]' 
          bump-policy: 'last-commit'  

      - name: Authenticate with npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Get current version
        run: |
          cd ${{ matrix.package.path }}
          export CURRENT_VERSION=$(node -pe "require('./package.json').version")
        id: version

      - name: Echo New Version
        run: echo "New version is ${{ env.CURRENT_VERSION }}"


      - name: Publish package if changes
        run: |
          cd ${{ matrix.package.path }}
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          if echo "$CHANGED_FILES" | grep -q "${{ matrix.package.name }}"; then
            npm version patch
            export NEW_VERSION=$(node -pe "require('./package.json').version")
            echo "Publishing version $NEW_VERSION"
            npm publish
            echo "Updating local package.json"
            git config --local user.email "cvaruncv1998@gmail.com"
            git config --local user.name "cv-arun"
            git add package.json
            git commit -m "Bump version to $NEW_VERSION"
             git push -u origin main
          else
            echo "No changes in ${{ matrix.package.name }}, skipping publish."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}




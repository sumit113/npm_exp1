name: Publish to npm

on:
  push:
    branches:
      - feature
    paths:
      - 'packages/is-even-by-cv/**'
      - 'packages/is-odd-by-cv/**'

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - packages/is-even-by-cv
          - packages/is-odd-by-cv
            
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        
      - name: Check modified files
        run: |
          # Get the list of modified files
          MODIFIED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
          # Check if any of the modified files are in the folder
          if echo "$MODIFIED_FILES" | grep -q "packages/is-even-by-cv/**"; then
            # Bump the version of the package.json file in the app folder
            cd packages/is-even-by-cv
            npm version patch -m "Bump the version to %s"
            # Push the changes back to the repository
            # git push origin ${{ github.ref }}
          fi
      # - name: Automated Version Bump
      #   uses: phips28/gh-action-bump-version@master
      #   env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #      # specify the folder where package.json is located
      #      folder: packages/is-even-by-cv
      #      # specify the wording for minor version bump
      #      minor-wording: 'feat,minor'
      #      # specify the wording for major version bump
      #      major-wording: 'BREAKING,major'  

      # - name: Authenticate with npm
      #   run: |
      #     echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      # - name: Get current version
      #   run: |
      #     cd ${{ matrix.package.path }}
      #     export CURRENT_VERSION=$(node -pe "require('./packages/is-even-by-cv/package.json').version")
      #   id: version

      # - name: Echo New Version
      #   run: echo "New version is ${{ env.CURRENT_VERSION }}"


      - name: Publish package if changes
        run: |
          cd ${{ matrix.package.path }}
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          if echo "$CHANGED_FILES" | grep -q "${{ matrix.package.name }}"; then
          #   npm version patch
          #   export NEW_VERSION=$(node -pe "require('./package.json').version")
          #   echo "Publishing version $NEW_VERSION"
            npm publish
            echo "Updating local package.json"
            git config --local user.email "cvaruncv1998@gmail.com"
            git config --local user.name "cv-arun"
            git add package.json
            git commit -m "Bump version to $NEW_VERSION"
             git push -u origin main
          else
            echo "No changes in ${{ matrix.package.name }}, skipping publish."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



